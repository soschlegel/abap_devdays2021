managed;

define behavior for ZRAP400_I_TRAVEL_SSC alias Travel
implementation in class zrap400_bp_i_travel_SSC unique
persistent table zrap400_travssc
etag master LastChangedAt
lock master
authorization master ( instance )
early numbering
{
  create;
  update;
  delete;

  association _Booking { create ( features : instance ); }

  field ( readonly ) LastChangedAt, LastChangedBy, CreatedAt, CreatedBy;
  field ( readonly ) TravelID, TotalPrice;
  field ( mandatory ) AgencyID, CustomerID, BeginDate, EndDate, OverallStatus, CurrencyCode;

  // actions
  action ( features : instance ) acceptTravel result [1] $self;
  action ( features : instance ) rejectTravel result [1] $self;
  internal action reCalcTotalPrice;

  // determinations
  determination setStatusToOpen on modify { create; }
  determination calculateTotalPrice on modify { create; field BookingFee, CurrencyCode; }

  // validations
  validation validateCustomer on save { create; field CustomerID; }
  validation validateAgency on save { create; field AgencyID; }
  validation validateDates on save { create; field BeginDate, EndDate; }
  validation validateStatus on save { create; field OverallStatus; }

  mapping for ZRAP400_TRAVSSC
  {
    TravelID = TRAVEL_ID;
    AgencyID = AGENCY_ID;
    CustomerID = CUSTOMER_ID;
    BeginDate = BEGIN_DATE;
    EndDate = END_DATE;
    BookingFee = BOOKING_FEE;
    TotalPrice = TOTAL_PRICE;
    CurrencyCode = CURRENCY_CODE;
    Description = DESCRIPTION;
    OverallStatus = OVERALL_STATUS;
    CreatedBy = CREATED_BY;
    CreatedAt = CREATED_AT;
    LastChangedBy = LAST_CHANGED_BY;
    LastChangedAt = LAST_CHANGED_AT;
  }

}

define behavior for ZRAP400_I_BOOKING_SSC alias Booking
implementation in class zrap400_bp_i_booking_SSC unique
persistent table zrap400_bookssc
lock dependent by _Travel
authorization dependent by _Travel
early numbering
{
  update;
  delete;

  field ( readonly ) TravelID, BookingID;

  mapping for ZRAP400_BOOKSSC
  {
    TravelID = TRAVEL_ID;
    BookingID = BOOKING_ID;
    BookingDate = BOOKING_DATE;
    CustomerID = CUSTOMER_ID;
    CarrierID = CARRIER_ID;
    ConnectionID = CONNECTION_ID;
    FlightDate = FLIGHT_DATE;
    FlightPrice = FLIGHT_PRICE;
    CurrencyCode = CURRENCY_CODE;
    BookingStatus = BOOKING_STATUS;
    LastChangedAt = LAST_CHANGED_AT;
  }

  association _Travel;
}